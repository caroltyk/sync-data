{
  "api_definition": {
    "id": "6661743ab5b3a0000115dd4e",
    "name": "FastAPI Httpbin",
    "slug": "",
    "listen_port": 0,
    "protocol": "",
    "enable_proxy_protocol": false,
    "api_id": "1e5c982bdedc4f3657ce7fe1ce6efd8b",
    "org_id": "664f5023d4df31000105fc8d",
    "use_keyless": true,
    "use_oauth2": false,
    "use_openid": false,
    "openid_options": {
      "providers": [],
      "segregate_by_client": false
    },
    "oauth_meta": {
      "allowed_access_types": [],
      "allowed_authorize_types": [],
      "auth_login_redirect": ""
    },
    "auth": {
      "name": "",
      "use_param": false,
      "param_name": "",
      "use_cookie": false,
      "cookie_name": "",
      "disable_header": false,
      "auth_header_name": "",
      "use_certificate": false,
      "validate_signature": false,
      "signature": {
        "algorithm": "",
        "header": "",
        "use_param": false,
        "param_name": "",
        "secret": "",
        "allowed_clock_skew": 0,
        "error_code": 0,
        "error_message": ""
      }
    },
    "auth_configs": {},
    "use_basic_auth": false,
    "basic_auth": {
      "disable_caching": false,
      "cache_ttl": 0,
      "extract_from_body": false,
      "body_user_regexp": "",
      "body_password_regexp": ""
    },
    "use_mutual_tls_auth": false,
    "client_certificates": [],
    "upstream_certificates": {},
    "upstream_certificates_disabled": true,
    "pinned_public_keys": {},
    "certificate_pinning_disabled": true,
    "enable_jwt": false,
    "use_standard_auth": false,
    "use_go_plugin_auth": false,
    "enable_coprocess_auth": false,
    "custom_plugin_auth_enabled": false,
    "jwt_signing_method": "",
    "jwt_source": "",
    "jwt_identity_base_field": "",
    "jwt_client_base_field": "",
    "jwt_policy_field_name": "",
    "jwt_default_policies": [],
    "jwt_issued_at_validation_skew": 0,
    "jwt_expires_at_validation_skew": 0,
    "jwt_not_before_validation_skew": 0,
    "jwt_skip_kid": false,
    "idp_client_id_mapping_disabled": false,
    "jwt_scope_to_policy_mapping": {},
    "jwt_scope_claim_name": "",
    "notifications": {
      "shared_secret": "",
      "oauth_on_keychange_url": ""
    },
    "enable_signature_checking": false,
    "hmac_allowed_clock_skew": 0,
    "hmac_allowed_algorithms": [],
    "request_signing": {
      "is_enabled": false,
      "secret": "",
      "key_id": "",
      "algorithm": "",
      "header_list": [],
      "certificate_id": "",
      "signature_header": ""
    },
    "base_identity_provided_by": "",
    "definition": {
      "enabled": false,
      "name": "",
      "default": "",
      "location": "",
      "key": "",
      "strip_path": false,
      "strip_versioning_data": false,
      "fallback_to_default": false,
      "versions": {}
    },
    "version_data": {
      "not_versioned": true,
      "default_version": "",
      "versions": {
        "": {
          "name": "",
          "expires": "",
          "paths": {
            "ignored": [],
            "white_list": [],
            "black_list": []
          },
          "use_extended_paths": true,
          "extended_paths": {
            "persist_graphql": []
          },
          "global_headers": {},
          "global_headers_remove": [],
          "global_headers_disabled": true,
          "global_response_headers": {},
          "global_response_headers_remove": [],
          "global_response_headers_disabled": true,
          "ignore_endpoint_case": false,
          "global_size_limit": 0,
          "override_target": ""
        }
      }
    },
    "uptime_tests": {
      "check_list": [],
      "config": {
        "expire_utime_after": 0,
        "service_discovery": {
          "use_discovery_service": false,
          "query_endpoint": "",
          "use_nested_query": false,
          "parent_data_path": "",
          "data_path": "",
          "port_data_path": "",
          "target_path": "",
          "use_target_list": false,
          "cache_disabled": true,
          "cache_timeout": 0,
          "endpoint_returns_list": false
        },
        "recheck_wait": 0
      }
    },
    "proxy": {
      "preserve_host_header": false,
      "listen_path": "/",
      "target_url": "http://0.0.0.0:8000",
      "disable_strip_slash": false,
      "strip_listen_path": true,
      "enable_load_balancing": false,
      "target_list": [],
      "check_host_against_uptime_tests": false,
      "service_discovery": {
        "use_discovery_service": false,
        "query_endpoint": "",
        "use_nested_query": false,
        "parent_data_path": "",
        "data_path": "",
        "port_data_path": "",
        "target_path": "",
        "use_target_list": false,
        "cache_disabled": true,
        "cache_timeout": 0,
        "endpoint_returns_list": false
      },
      "transport": {
        "ssl_insecure_skip_verify": false,
        "ssl_ciphers": [],
        "ssl_min_version": 0,
        "ssl_max_version": 0,
        "ssl_force_common_name_check": false,
        "proxy_url": ""
      }
    },
    "disable_rate_limit": false,
    "disable_quota": false,
    "custom_middleware": {
      "pre": [],
      "post": [],
      "post_key_auth": [],
      "auth_check": {
        "disabled": true,
        "name": "",
        "path": "",
        "require_session": false,
        "raw_body_only": false
      },
      "response": [],
      "driver": "",
      "id_extractor": {
        "disabled": true,
        "extract_from": "",
        "extract_with": "",
        "extractor_config": {}
      }
    },
    "custom_middleware_bundle": "",
    "custom_middleware_bundle_disabled": true,
    "cache_options": {
      "cache_timeout": 0,
      "enable_cache": false,
      "cache_all_safe_requests": false,
      "cache_response_codes": [],
      "enable_upstream_cache_control": false,
      "cache_control_ttl_header": "",
      "cache_by_headers": []
    },
    "session_lifetime": 0,
    "active": true,
    "internal": false,
    "auth_provider": {
      "name": "",
      "storage_engine": "",
      "meta": {}
    },
    "session_provider": {
      "name": "",
      "storage_engine": "",
      "meta": {}
    },
    "event_handlers": {
      "events": {}
    },
    "enable_batch_request_support": false,
    "enable_ip_whitelisting": false,
    "allowed_ips": [],
    "enable_ip_blacklisting": false,
    "blacklisted_ips": [],
    "dont_set_quota_on_create": false,
    "expire_analytics_after": 0,
    "response_processors": [],
    "CORS": {
      "enable": false,
      "allowed_origins": [],
      "allowed_methods": [],
      "allowed_headers": [],
      "exposed_headers": [],
      "allow_credentials": false,
      "max_age": 0,
      "options_passthrough": false,
      "debug": false
    },
    "domain": "",
    "domain_disabled": true,
    "certificates": [],
    "do_not_track": false,
    "enable_context_vars": true,
    "config_data": {},
    "config_data_disabled": true,
    "tag_headers": [],
    "global_rate_limit": {
      "disabled": true,
      "rate": 0,
      "per": 0
    },
    "strip_auth_data": false,
    "enable_detailed_recording": true,
    "graphql": {
      "enabled": false,
      "execution_mode": "",
      "version": "",
      "schema": "",
      "type_field_configurations": [],
      "playground": {
        "enabled": false,
        "path": ""
      },
      "engine": {
        "field_configs": [],
        "data_sources": [],
        "global_headers": []
      },
      "proxy": {
        "auth_headers": {},
        "request_headers": {},
        "use_response_extensions": {
          "on_error_forwarding": false
        }
      },
      "subgraph": {
        "sdl": ""
      },
      "supergraph": {
        "subgraphs": [],
        "merged_sdl": "",
        "global_headers": {},
        "disable_query_batching": false
      },
      "introspection": {
        "disabled": false
      }
    },
    "tags": [
      "staging"
    ],
    "is_oas": true,
    "detailed_tracing": true,
    "scopes": {
      "jwt": {},
      "oidc": {}
    },
    "analytics_plugin": {},
    "external_oauth": {
      "enabled": false,
      "providers": []
    }
  },
  "oas": {
    "components": {
      "schemas": {
        "HTTPValidationError": {
          "properties": {
            "detail": {
              "items": {
                "$ref": "#/components/schemas/ValidationError"
              },
              "title": "Detail",
              "type": "array"
            }
          },
          "title": "HTTPValidationError",
          "type": "object"
        },
        "ValidationError": {
          "properties": {
            "loc": {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  }
                ]
              },
              "title": "Location",
              "type": "array"
            },
            "msg": {
              "title": "Message",
              "type": "string"
            },
            "type": {
              "title": "Error Type",
              "type": "string"
            }
          },
          "required": [
            "loc",
            "msg",
            "type"
          ],
          "title": "ValidationError",
          "type": "object"
        }
      }
    },
    "info": {
      "description": "\n\u003ca href=\"static/logo.png\"\u003e\u003cimg src=\"static/logo.png\" align=\"right\" /\u003e\u003c/a\u003e\n\nHTTP Endpoints for easy testing of your app.\n\nBuilt with the \u003ca href=\"https://fastapi.tiangolo.com/\"\u003eFastAPI framework\u003c/a\u003e, \nthis is heavily based on the original \u003ca href=\"https://httpbin.org/\"\u003eHttpbin\u003c/a\u003e website.\n\n\u003ca href=\"/about\"\u003eAbout this project\u003c/a\u003e - \n\u003ca href=\"/roadmap\"\u003eDevelopment Roadmap\u003c/a\u003e -\n\u003ca href=\"/qrcode/\"\u003eDead Simple QR Code Generator\u003c/a\u003e -\n\u003ca href=\"/test-password-manager-form/\"\u003eForm for testing Password Managers like 1Password and BitWarden\u003c/a\u003e\n\u003cp\u003e\n\n\u003ca href=\"https://github.com/dmuth/fastapi-httpbin\"\u003eGitHub repo\u003c/a\u003e\n\u003cp\u003e\n\nRun locally in Docker: \u003ctt\u003e\u003cb\u003edocker run -p 80:80 dmuth1/fastapi-httpbin\u003c/b\u003e\u003c/tt\u003e\n\n\u003ca href=\"https://httpbin.dmuth.org/\"\u003eMain Site\u003c/a\u003e - Mirrors: \n\u003ca href=\"https://fly.httpbin.dmuth.org/\"\u003eFly\u003c/a\u003e\n\u003ca href=\"https://railway.httpbin.dmuth.org/\"\u003eRailway\u003c/a\u003e\n\u003ca href=\"https://render.httpbin.dmuth.org/\"\u003eRender\u003c/a\u003e\n\n",
      "title": "FastAPI Httpbin",
      "version": "0.2.0"
    },
    "openapi": "3.0.2",
    "paths": {
      "/get": {
        "get": {
          "description": "The request's GET parameters.",
          "operationId": "get_get_get",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "description": "Successful Response"
            }
          },
          "summary": "The request's GET parameters.",
          "tags": [
            "HTTP Methods"
          ]
        }
      },
      "/status/{codes}": {
        "get": {
          "operationId": "get_status__codes__get",
          "parameters": [
            {
              "example": "200,201,204",
              "in": "path",
              "name": "codes",
              "required": true,
              "schema": {
                "minLength": 3,
                "pattern": "^[0-9,_]+$",
                "title": "Codes",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {}
                }
              },
              "description": "Successful Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              },
              "description": "Validation Error"
            }
          },
          "summary": "Return status code or random one if multiple given as comma-delimited list (Underscores are also permitted as delimiters)",
          "tags": [
            "Status Codes"
          ]
        }
      }
    },
    "servers": [
      {
        "url": "http://0.0.0.0:8000"
      }
    ],
    "tags": [
      {
        "description": "Testing different HTTP verbs.",
        "name": "HTTP Methods"
      }
    ],
    "x-tyk-api-gateway": {
      "info": {
        "dbId": "6661743ab5b3a0000115dd4e",
        "id": "1e5c982bdedc4f3657ce7fe1ce6efd8b",
        "name": "FastAPI Httpbin",
        "orgId": "664f5023d4df31000105fc8d",
        "state": {
          "active": true
        }
      },
      "middleware": {
        "operations": {
          "get_status__codes__get": {
            "validateRequest": {
              "enabled": true,
              "errorResponseCode": 422
            }
          }
        }
      },
      "server": {
        "authentication": {
          "enabled": false,
          "securitySchemes": {
            "authToken": {
              "enabled": true
            }
          }
        },
        "detailedActivityLogs": {
          "enabled": true
        },
        "detailedTracing": {
          "enabled": true
        },
        "gatewayTags": {
          "enabled": true,
          "tags": [
            "staging"
          ]
        },
        "listenPath": {
          "strip": true,
          "value": "/"
        }
      },
      "upstream": {
        "url": "http://0.0.0.0:8000"
      }
    }
  },
  "hook_references": [],
  "is_site": false,
  "sort_by": 0,
  "user_group_owners": [],
  "user_owners": []
}